using System;


namespace 访问者模式
{
    class Program
    {
        static void Main(string[] args)
        {
            var computer = new Computer();
            computer.accept(new ComputerPartDisplayVisitor());

            Console.WriteLine("Hello World!");
        }
    }
}

/* ****************
 * 定义：表示一个作用于其对象结构中的各元素的操作，它使你可以在不改变各元素类的前提下定义作用于这些元素的新操作。
 * 主要解决：稳定的数据结构和易变的操作耦合问题。就是把数据结构和作用于结构上的操作解耦合，使得操作集合可相对自由地演化。
 * 组成：

　　Visitor抽象访问者接口：它定义了对每一个元素（Element）访问的行为，它的参数就是可以访问的元素，它的方法个数理论上来讲与元素个数（Element的实现类个数）是一样的，从这点不难看出，访问者模式要求元素类的个数不能改变（不能改变的意思是说，如果元素类的个数经常改变，则说明不适合使用访问者模式）。

　　ConcreteVisitor具体访问者角色：它需要给出对每一个元素类访问时所产生的具体行为。

　　Element抽象节点（元素）角色：它定义了一个接受访问者（accept）的方法，其意义是指，每一个元素都要可以被访问者访问。

　　ConcreteElement具体节点（元素）角色：它提供接受访问方法的具体实现，而这个具体的实现，通常情况下是使用访问者提供的访问该元素类的方法。

　　ObjectStructure结构对象角色：这个便是定义当中所提到的对象结构，对象结构是一个抽象表述，具体点可以理解为一个具有容器性质或者复合对象特性的类，它会含有一组元素（Element），并且可以迭代这些元素，供访问者访问。

 * *************  */
